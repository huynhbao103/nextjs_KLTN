"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/geocode/route";
exports.ids = ["app/api/geocode/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgeocode%2Froute&page=%2Fapi%2Fgeocode%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgeocode%2Froute.ts&appDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgeocode%2Froute&page=%2Fapi%2Fgeocode%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgeocode%2Froute.ts&appDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Kh_a_lu_n_t_t_nghi_p_fe_kltn_src_app_api_geocode_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/geocode/route.ts */ \"(rsc)/./src/app/api/geocode/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/geocode/route\",\n        pathname: \"/api/geocode\",\n        filename: \"route\",\n        bundlePath: \"app/api/geocode/route\"\n    },\n    resolvedPagePath: \"D:\\\\Khóa luận tốt nghiệp\\\\fe-kltn\\\\src\\\\app\\\\api\\\\geocode\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Kh_a_lu_n_t_t_nghi_p_fe_kltn_src_app_api_geocode_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/geocode/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW9jb2RlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZnZW9jb2RlJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZ2VvY29kZSUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDS2glQzMlQjNhJTIwbHUlRTElQkElQURuJTIwdCVFMSVCQiU5MXQlMjBuZ2hpJUUxJUJCJTg3cCU1Q2ZlLWtsdG4lNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNLaCVDMyVCM2ElMjBsdSVFMSVCQSVBRG4lMjB0JUUxJUJCJTkxdCUyMG5naGklRTElQkIlODdwJTVDZmUta2x0biZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtQjtBQUNoRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWZvb2QtcmVjb21tZW5kYXRpb24vP2JiY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcS2jDs2EgbHXhuq1uIHThu5F0IG5naGnhu4dwXFxcXGZlLWtsdG5cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcZ2VvY29kZVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2VvY29kZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlb2NvZGVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2dlb2NvZGUvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxLaMOzYSBsdeG6rW4gdOG7kXQgbmdoaeG7h3BcXFxcZmUta2x0blxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxnZW9jb2RlXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2dlb2NvZGUvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgeocode%2Froute&page=%2Fapi%2Fgeocode%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgeocode%2Froute.ts&appDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/geocode/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/geocode/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\n// Cache in memory (trong production nên dùng Redis)\nconst geocodeCache = new Map();\nconst CACHE_DURATION = 60 * 60 * 1000; // 1 hour (geocoding data ít thay đổi)\n// Rate limiting (trong production nên dùng Redis)\nconst rateLimitMap = new Map();\nconst RATE_LIMIT_WINDOW = 60 * 1000; // 1 minute\nconst RATE_LIMIT_MAX_REQUESTS = 50; // 50 requests per minute\n// Helper function để lấy client IP\nfunction getClientIP(request) {\n    return request.headers.get(\"x-forwarded-for\")?.split(\",\")[0] || request.headers.get(\"x-real-ip\") || \"unknown\";\n}\n// Rate limiting check\nfunction checkRateLimit(clientIP) {\n    const now = Date.now();\n    const clientData = rateLimitMap.get(clientIP);\n    if (!clientData || now > clientData.resetTime) {\n        rateLimitMap.set(clientIP, {\n            count: 1,\n            resetTime: now + RATE_LIMIT_WINDOW\n        });\n        return true;\n    }\n    if (clientData.count >= RATE_LIMIT_MAX_REQUESTS) {\n        return false;\n    }\n    clientData.count++;\n    return true;\n}\n// Cache helper\nfunction getCachedData(key) {\n    const cached = geocodeCache.get(key);\n    if (!cached) return null;\n    if (Date.now() - cached.timestamp > CACHE_DURATION) {\n        geocodeCache.delete(key);\n        return null;\n    }\n    return cached.data;\n}\nfunction setCachedData(key, data) {\n    geocodeCache.set(key, {\n        data,\n        timestamp: Date.now()\n    });\n}\n// External geocoding API calls\nasync function getAddressFromCoords(lat, lon) {\n    const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&zoom=10&addressdetails=1`;\n    const response = await fetch(url, {\n        headers: {\n            \"Accept-Language\": \"vi,en\",\n            \"User-Agent\": \"WeatherApp/1.0\"\n        }\n    });\n    if (!response.ok) {\n        throw new Error(`Geocoding API error: ${response.status} ${response.statusText}`);\n    }\n    return response.json();\n}\nasync function getCoordsFromAddress(address) {\n    const encodedAddress = encodeURIComponent(address);\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodedAddress}&limit=5&addressdetails=1`;\n    const response = await fetch(url, {\n        headers: {\n            \"Accept-Language\": \"vi,en\",\n            \"User-Agent\": \"WeatherApp/1.0\"\n        }\n    });\n    if (!response.ok) {\n        throw new Error(`Geocoding API error: ${response.status} ${response.statusText}`);\n    }\n    return response.json();\n}\nasync function GET(request) {\n    try {\n        // Rate limiting check\n        const clientIP = getClientIP(request);\n        if (!checkRateLimit(clientIP)) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Rate limit exceeded. Please try again later.\"\n            }, {\n                status: 429\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const lat = searchParams.get(\"lat\");\n        const lon = searchParams.get(\"lon\");\n        const address = searchParams.get(\"address\");\n        // Reverse geocoding (coordinates to address)\n        if (lat && lon) {\n            const latitude = parseFloat(lat);\n            const longitude = parseFloat(lon);\n            if (isNaN(latitude) || isNaN(longitude)) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"Invalid latitude or longitude values\"\n                }, {\n                    status: 400\n                });\n            }\n            // Check cache\n            const cacheKey = `geocode_reverse_${latitude}_${longitude}`;\n            const cached = getCachedData(cacheKey);\n            if (cached) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(cached);\n            }\n            // Call external API\n            const addressData = await getAddressFromCoords(latitude, longitude);\n            // Cache the result\n            setCachedData(cacheKey, addressData);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(addressData);\n        }\n        // Forward geocoding (address to coordinates)\n        if (address) {\n            // Check cache\n            const cacheKey = `geocode_forward_${address}`;\n            const cached = getCachedData(cacheKey);\n            if (cached) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(cached);\n            }\n            // Call external API\n            const coordinates = await getCoordsFromAddress(address);\n            // Cache the result\n            setCachedData(cacheKey, coordinates);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(coordinates);\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Missing parameters. Provide either lat/lon or address\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        console.error(\"Geocoding API error:\", error);\n        if (error instanceof Error) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: error.message\n            }, {\n                status: 500\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/geocode/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgeocode%2Froute&page=%2Fapi%2Fgeocode%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgeocode%2Froute.ts&appDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CKh%C3%B3a%20lu%E1%BA%ADn%20t%E1%BB%91t%20nghi%E1%BB%87p%5Cfe-kltn&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();